;(function(){function e(e){var n=0,i=0,o=0,t={};window.sonic&&window.sonic.getDiffData&&window.sonic.getDiffData(),window.getDiffDataCallback=function(f){try{var c=JSON.parse(f)}catch(a){}if(200==c.code)i=n=3,t=JSON.parse(c.result);else if(1e3==c.code)i=n=1;else if(2e3==c.code)i=n=2;else if(304==c.code)switch(n=4,parseInt(c.srcCode)){case 304:i=4;break;case 200:i=3;break;case 1e3:i=1;break;case 2e3:i=2;break;default:i=n}0==o&&(e(n,i,t),o=1)},setTimeout(function(){0==o&&(o=1,e(n,i,t))},5e3)}"undefined"!=typeof module&&"object"==typeof exports?module.exports=e:"function"==typeof define?define("lib/sonic/sonic",[],function(n,i){i.getSonicData=e}):"function"==typeof define&&define.amd?define(function(){return e}):this.moduleName=e}).call(function(){return this||("undefined"!=typeof window?window:global)});